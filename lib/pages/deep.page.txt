import 'dart:convert';

import 'package:flutter/material.dart';
import 'package:http/http.dart' as http;

class DeepSeekPage extends StatefulWidget {
  DeepSeekPage({super.key});

  @override
  State<DeepSeekPage> createState() => _DeepSeekPageState();
}

class _DeepSeekPageState extends State<DeepSeekPage> {
  TextEditingController userController = TextEditingController();
  ScrollController scrollController = ScrollController();
  var messages = [
    {"role": "user", "content": "Bonjour"},
    {"role": "assistant", "content": "Bienvenue que puis-je faire pour vous"},
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text(
          "DeepSeek is here to respond to your demands",
          style: TextStyle(color: Colors.black),
        ),
        actions: [
          IconButton(
              onPressed: () {
                Navigator.of(context).pop();
                Navigator.pushNamed(context, "/dashboard");
              },
              icon: Icon(
                Icons.logout,
                color: Colors.black,
              ))
        ],
      ),
      body: Column(
        children: [
          Expanded(
            child: ListView.builder(
                controller: scrollController,
                itemCount: messages.length,
                itemBuilder: (content, index) {
                  return Column(
                    children: [
                      Row(
                        children: [
                          messages[index]['role'] == 'user'
                              ? SizedBox(
                                  width: 80,
                                )
                              : SizedBox(
                                  width: 10,
                                ),
                          Expanded(
                            child: Card.outlined(
                              margin: EdgeInsets.all(6),
                              color: messages[index]['role'] == 'user'
                                  ? Colors.green
                                  : Colors.white,
                              child: ListTile(
                                title: Text("${messages[index]['content']}"),
                              ),
                            ),
                          ),
                        ],
                      ),
                      Divider(),
                    ],
                  );
                }),
          ),
          Padding(
            padding: const EdgeInsets.all(8.0),
            child: Row(
              children: [
                Expanded(
                  child: TextFormField(
                    controller: userController,
                    decoration: InputDecoration(
                        hintText: ("Your message should down here"),
                        border: OutlineInputBorder(
                            borderRadius: BorderRadius.circular(10),
                            borderSide: BorderSide(
                                width: 1,
                                color: Theme.of(context).primaryColor))),
                  ),
                ),
                IconButton(
                    onPressed: () {
                      String question = userController.text;
                      Uri uri =
                          Uri.https("api.deepseek.com", "/chat/completions");
                      var headers = {
                        "Content-Type": " application/json",

                        //"Authorization": "Bearer <DeepSeek API Key>"
                      };
                      /*variable messages ajoutés avec comme contenu :question pourque le LLM comprend les messages*/
                      messages.add({"role": "user", "content": question});
                      var body = {
                        "model": "deepseek-chat",
                        "messages":
                            messages //ajoutée pour remettre les anciens messages
                        /* [
                          {"role": "user", "content": question}
                        ]*/
                      };

                      http
                          .post(uri, headers: headers, body: json.encode(body))
                          .then(
                        (resp) {
                          //print(resp.statusCode);
                          var aiResponse = json.decode(resp.body);
                          String answer =
                              aiResponse['choices'][0]['message']['content'];
                          setState(() {
                            messages.add({"role": "user", "content": question});
                            messages
                                .add({"role": "assistant", "content": answer});
                            scrollController.jumpTo(
                                scrollController.position.maxScrollExtent +
                                    900);
                          });
                          userController.text = "";
                        },
                      ).catchError((err) {
                        print(err);
                      });

                      /*String reponse = "Reponse to ${question}";
                      setState(() {
                        messages.add({"type": "user", "content": question});
                        messages.add({"type": "assistant", "content": reponse});
                      });
                      */
                    },
                    icon: Icon(Icons.send))
              ],
            ),
          ),
        ],
      ),
    );
  }
}
